// This script uses data from a Google sheet to customise a Google doc. Creating a document for every row in the spreadsheet and then add the link to the new doc back in the spreadsheet

function generateProductDescriptions() {
  var spreadsheetId = "1kPsKp7voaydmWrY12KZrHuLZTJ5Eqdaw1LTZnpKgXpA"; // ✅ Replace with your Google Sheets ID
  var sheet = SpreadsheetApp.openById(spreadsheetId).getSheetByName("Testing"); // ✅ Replace "Sheet1" with your actual sheet name
  var data = sheet.getDataRange().getValues();

  // ✅ Google Docs Template
  var templateDocId = "1mFe0FT3IlZ6fZdS4NKoZpubPLXQt0bCpnhY6aydx8pc"; // ✅ Replace with your Google Docs Template ID
  var templateDoc = DriveApp.getFileById(templateDocId);
  
  // ✅ Destination Folder
  var outputFolderId = "1Raa25rzFyshDrtihgSsdaW5asdF2wi0f"; // ✅ Replace with your Google Drive folder ID
  var outputFolder = DriveApp.getFolderById(outputFolderId);
  
  // ✅ Loop through each row (starting from row 2, skipping headers)
  for (var i = 1; i < data.length; i++) {

    var miniCollectionName = data[i][0]; // Column A: Mini Collection Name
    var bundle = data[i][1]; // Columb B: Bundle
    var collectionName = data[i][2]; // Column C, Whole Collection Name
    var tagline = data[i][3]; // Column D: Tagline
    var pieces = data[i][4]; // Column E: Pieces
    var listingPrice = data[i][5]; // Column F: Listing Price
    var title = data[i][8]; // Column I: Title which is generated by script

    var titleCell = sheet.getRange(i + 1, 9); // Column I (Title)
    var docLinkCell = sheet.getRange(i + 1, 10); // Column J (Generated Desc Link)
    var deliverablesCell = sheet.getRange(i + 1, 11); // Column K (Deliverables Folder Link)
    var descriptionCell = sheet.getRange(i + 1, 12); // Column L (Description Folder Link)

    // ✅ Check if the document already exists (skip duplicates)
    if (docLinkCell.getValue() !== "") {
      Logger.log("Skipping row " + (i + 1) + " - Document already exists.");
      continue;
    }

    // ✅ Create a folder for this Mini Collection
    var miniCollectionFolder = outputFolder.createFolder(miniCollectionName);

    // ✅ Create subfolders
    var deliverablesFolder = miniCollectionFolder.createFolder("Deliverables");
    var descriptionFolder = miniCollectionFolder.createFolder("Description");

    // ✅ Store folder links in Google Sheets
    deliverablesCell.setFormula('=HYPERLINK("' + deliverablesFolder.getUrl() + '", "Open Deliverables")');
    descriptionCell.setFormula('=HYPERLINK("' + descriptionFolder.getUrl() + '", "Open Description")');

    // ✅ Generate Product Title (Keep brackets for filename and sheet entry)
    var productTitle = `[${miniCollectionName}] | Luxury Abstract Digital Art | Fine Art Print | High-End Wall Decor | ${collectionName} Aesthetic | Ethereal Home Decor | Statement Wall Art`;

    // ✅ Remove brackets when inserting into the document
    var cleanTitle = productTitle.replace(/\[|\]/g, ""); // Removes all [ and ]

    // ✅ Insert Title into Google Sheets (Column I)
    titleCell.setValue(productTitle); // Keeps brackets in spreadsheet for reference

    var fileName = miniCollectionName + " " + new Date().toISOString().slice(0, 10);

    // ✅ Make a copy of the template
    var newDoc = templateDoc.makeCopy(fileName, descriptionFolder);
    var newDocId = newDoc.getId();
    var doc = DocumentApp.openById(newDocId);
    var body = doc.getBody();

    // ✅ Replace placeholders in the document
    body.replaceText("\\[PRODUCT_TITLE\\]", cleanTitle);
    body.replaceText("\\[TAGLINE\\]", tagline);
    body.replaceText("\\[PIECES\\]", pieces);
    body.replaceText("\\[BUNDLE\\]", bundle);
    body.replaceText("\\[LISTING_PRICE\\]", listingPrice);

    // ✅ Set the document title
    doc.setName(miniCollectionName);
    
    // ✅ Save changes
    doc.saveAndClose();

  // ✅ Insert a clickable link in Google Sheets
    var docUrl = "https://docs.google.com/document/d/" + newDocId;
    docLinkCell.setFormula('=HYPERLINK("' + docUrl + '", "View Document")');
  }

  Logger.log("✅ Product descriptions generated successfully!");
}

